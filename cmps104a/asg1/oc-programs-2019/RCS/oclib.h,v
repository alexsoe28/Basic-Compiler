head	1.20;
access;
symbols;
locks;
comment	@ * @;


1.20
date	2018.11.08.22.39.15;	author -;	state -;
branches;
next	1.19;

1.19
date	2018.11.08.22.37.50;	author -;	state -;
branches;
next	1.18;

1.18
date	2018.06.20.20.43.57;	author -;	state -;
branches;
next	1.17;

1.17
date	2018.06.20.20.43.13;	author -;	state -;
branches;
next	1.16;

1.16
date	2018.05.18.23.24.12;	author -;	state -;
branches;
next	1.15;

1.15
date	2018.05.18.22.50.09;	author -;	state -;
branches;
next	1.14;

1.14
date	2018.05.18.22.49.18;	author -;	state -;
branches;
next	1.13;

1.13
date	2018.05.18.22.47.02;	author -;	state -;
branches;
next	1.12;

1.12
date	2018.04.17.23.55.18;	author -;	state -;
branches;
next	1.11;

1.11
date	2018.04.06.00.31.37;	author -;	state -;
branches;
next	1.10;

1.10
date	2018.04.06.00.30.49;	author -;	state -;
branches;
next	1.9;

1.9
date	2018.04.03.23.32.53;	author -;	state -;
branches;
next	1.8;

1.8
date	2018.04.03.23.31.10;	author -;	state -;
branches;
next	1.7;

1.7
date	2018.04.03.23.30.29;	author -;	state -;
branches;
next	1.6;

1.6
date	2018.04.03.23.26.10;	author -;	state -;
branches;
next	1.5;

1.5
date	2018.04.03.23.24.24;	author -;	state -;
branches;
next	1.4;

1.4
date	2018.04.03.22.57.24;	author -;	state -;
branches;
next	1.3;

1.3
date	2018.04.03.22.55.22;	author -;	state -;
branches;
next	1.2;

1.2
date	2018.04.03.22.51.29;	author -;	state -;
branches;
next	1.1;

1.1
date	2018.04.03.22.42.54;	author -;	state -;
branches;
next	;


desc
@@


1.20
log
@-
@
text
@// $Id: oclib.h,v 1.18 2018-06-20 13:43:57-07 - - $

#ifndef __OCLIB_H__
#define __OCLIB_H__

#ifdef __OCLIB_C__

typedef char* cstring;
void* xcalloc (int nelem, int size);
void putint (int);
void putstr (const cstring);
cstring getword (void);
cstring getln (void);
void endl();

#else

#define EXIT_SUCCESS 0
#define EXIT_FAILURE 1
#define EOF (-1)
#define char int
#define bool int
#define true 1
#define false 0
#define assert(expr) { \
           if (not (expr)) { \
              __assert_fail (#expr, __FILE__, __LINE__, __FUNC__); \
           } \
        }
void __assert_fail (string expr, string file, int line, string func);
void putchar (char c);
void putint (int i);
void putstr (string s);
int getchar();
string getword();
string getln();
void endl();
void exit (int status);

#endif

#endif

@


1.19
log
@-
@
text
@d11 3
a13 3
void putstr (const cstring
cstringetword (void);
cstringetln (void);
@


1.18
log
@-
@
text
@d1 1
a1 1
// $Id: oclib.h,v 1.16 2018-05-18 16:24:12-07 - - $
d8 1
d11 3
a13 3
void putstr (const char*);
char* getword (void);
char* getln (void);
@


1.17
log
@-
@
text
@d26 1
a26 1
              __assert_fail (#expr, __FILE__, __LINE__); \
@


1.16
log
@-
@
text
@d1 1
a1 1
// $Id: oclib.h,v 1.15 2018-05-18 15:50:09-07 - - $
d26 1
a26 1
              __assert_fail (#expr, __FILE__, __LINE__, __FUNC__); \
@


1.15
log
@-
@
text
@d1 1
a1 1
// $Id: oclib.h,v 1.14 2018-05-18 15:49:18-07 - - $
d13 1
d36 1
@


1.14
log
@-
@
text
@d1 1
a1 1
// $Id: oclib.h,v 1.13 2018-05-18 15:47:02-07 - - $
a8 1
void putchar (char);
a10 1
int getchar();
a12 1
void exit (int);
@


1.13
log
@-
@
text
@d1 1
a1 1
// $Id: oclib.h,v 1.12 2018-04-17 16:55:18-07 - - $
d9 1
d12 1
d15 1
@


1.12
log
@-
@
text
@d1 1
a1 1
// $Id: oclib.h,v 1.11 2018-04-05 17:31:37-07 - - $
d9 2
a10 1
void putint (int i);
@


1.11
log
@-
@
text
@d1 1
a1 1
// $Id: oclib.h,v 1.10 2018-04-05 17:30:49-07 - - $
d15 2
@


1.10
log
@-
@
text
@d1 1
a1 1
// $Id: oclib.h,v 1.9 2018-04-03 16:32:53-07 - - $
d21 1
a21 1
           if (!(expr)) { \
@


1.9
log
@-
@
text
@d1 1
a1 1
// $Id: oclib.h,v 1.8 2018-04-03 16:31:10-07 - - $
d25 1
a25 1
void __assert_fail (string expr, string file, int line);
@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: oclib.h,v 1.7 2018-04-03 16:30:29-07 - - $
d11 1
a11 1
char* getline (void);
d31 1
a31 1
string getline();
@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: oclib.h,v 1.6 2018-04-03 16:26:10-07 - - $
d6 1
a6 1
#ifdef __OCLIB_CPP__
@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: oclib.h,v 1.5 2018-04-03 16:24:24-07 - - $
d29 3
a31 3
int getchar ();
string getword ();
string getline ();
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: oclib.h,v 1.4 2018-04-03 15:57:24-07 - - $
d28 1
a28 1
void puts (string s);
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: oclib.h,v 1.3 2018-04-03 15:55:22-07 - - $
d3 4
a6 2
#ifndef __OCLIB_OH__
#define __OCLIB_OH__
a7 1
#ifdef __OCLIB_C__
d9 3
a11 9
void __putc (char __c);
void __puti (int __i);
void __puts (char* __s);
int __getc (void);
char* __getw (void);
char* __getln (void);
void __exit (int status);
void ____assert_fail (const char* expr, const char* file, int line,
                      const char* func);
d14 1
d26 2
a27 2
void putc (char c);
void puti (int i);
d29 3
a31 3
int getc ();
string getw ();
string getln ();
d35 1
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: oclib.h,v 1.2 2018-04-03 15:51:29-07 - - $
d15 2
a16 1
void ____assert_fail (char* expr, char* file, int line);
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: oclib.h,v 1.1 2018-04-03 15:42:54-07 - - $
d23 5
a27 2
#define assert(expr) \
        {if (!(expr)) __assert_fail (#expr, __FILE__, __LINE__);}
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: oclib.oh,v 1.34 2018-03-29 17:46:39-07 - - $
a7 1
void __putb (char __b);
a10 1
void __endl (void);
a25 1
void putb (int b);
a28 1
void endl ();
@
