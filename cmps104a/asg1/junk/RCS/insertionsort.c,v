head	1.7;
access;
symbols;
locks;
comment	@ * @;


1.7
date	2011.09.03.03.40.04;	author -;	state -;
branches;
next	1.6;

1.6
date	2011.09.03.03.39.52;	author -;	state -;
branches;
next	1.5;

1.5
date	2011.09.03.03.39.27;	author -;	state -;
branches;
next	1.4;

1.4
date	2011.09.03.03.38.44;	author -;	state -;
branches;
next	1.3;

1.3
date	2011.09.03.03.38.31;	author -;	state -;
branches;
next	1.2;

1.2
date	2011.09.03.03.37.46;	author -;	state -;
branches;
next	1.1;

1.1
date	2011.09.03.03.37.19;	author -;	state -;
branches;
next	;


desc
@@


1.7
log
@-
@
text
@// $Id: insertionsort.c,v 1.6 2011-09-02 20:39:52-07 - - $
//
// Use insertion sort to print oc_argv in osrted order.
//

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef enum {false = 0, true = 1} bool;

void insertion_sort (int nelem, char **array) {
   int sorted = 1;
   while (sorted < nelem) {
      int slot = sorted;
      char *element = array[slot];
      bool cont = true;
      while (cont) {
         if (slot == 0) {
            cont = false;
         }else if (strcmp (array[slot - 1], element) <= 0) {
            cont = false;
         }else {
            array[slot] = array[slot - 1];
            slot = slot - 1;
         }
      }
      array[slot] = element;
      sorted = sorted + 1;
   }
}

int main (int argc, char **argv) {
   insertion_sort (argc, argv);
   int argi = 0;
   while (argi < argc) {
      printf ("%s\n", argv[argi]);
      argi = argi + 1;
   }
}

@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: insertionsort.c,v 1.5 2011-09-02 20:39:27-07 - - $
d37 1
a37 1
      printf ("%s\n" argv[argi]);
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: insertionsort.c,v 1.4 2011-09-02 20:38:44-07 - - $
d8 1
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: insertionsort.c,v 1.3 2011-09-02 20:38:31-07 - - $
d3 1
a3 1
// Use selection_sort to print oc_argv in osrted order.
d33 1
a33 1
   selection_sort (argc, argv);
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: insertionsort.c,v 1.1 2011-09-02 20:37:19-07 - - $
d9 1
a9 1
typedef enum {FALSE = 0, TRUE = 1} bool;
@


1.2
log
@-
@
text
@d9 2
d16 2
a17 2
      bool continue = true;
      while (continue) {
d19 1
a19 1
            continue = false;
d21 1
a21 1
            continue = false;
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: 33-insertionsort.oc,v 1.3 2011-09-02 19:02:52-07 - - $
d13 1
a13 1
      string element = array[slot];
@
