head	1.14;
access;
symbols;
locks;
comment	@# @;


1.14
date	2018.05.16.22.44.34;	author -;	state -;
branches;
next	1.13;

1.13
date	2018.05.16.22.38.48;	author -;	state -;
branches;
next	1.12;

1.12
date	2018.04.17.23.55.18;	author -;	state -;
branches;
next	1.11;

1.11
date	2018.04.06.20.19.15;	author -;	state -;
branches;
next	1.10;

1.10
date	2018.04.03.21.55.47;	author -;	state -;
branches;
next	1.9;

1.9
date	2018.03.30.17.21.02;	author -;	state -;
branches;
next	1.8;

1.8
date	2018.03.30.17.19.09;	author -;	state -;
branches;
next	1.7;

1.7
date	2018.03.30.00.46.39;	author -;	state -;
branches;
next	1.6;

1.6
date	2018.03.30.00.44.54;	author -;	state -;
branches;
next	1.5;

1.5
date	2016.10.26.21.34.06;	author -;	state -;
branches;
next	1.4;

1.4
date	2012.12.03.21.24.51;	author -;	state -;
branches;
next	1.3;

1.3
date	2011.10.26.01.21.10;	author -;	state -;
branches;
next	1.2;

1.2
date	2011.09.21.02.23.27;	author -;	state -;
branches;
next	1.1;

1.1
date	2011.09.16.01.50.16;	author -;	state -;
branches;
next	;


desc
@@


1.14
log
@-
@
text
@// $Id: 42-viiiqueens.oc,v 1.13 2018-05-16 15:38:48-07 - - $

#include "oclib.h"

#define BOARD_SIZE 8
int[] board = null;

bool is_safe (int newcol) {
   int col = 0;
   int diagonal = 0;
   while (col < newcol) {
      if (board[col] == board[newcol]) return false;
      diagonal = board[col] - board[newcol];
      if (diagonal == col - newcol) return false;
      if (diagonal == newcol - col) return false;
      col = col + 1;
   }
   return true;
}

void printqueens() {
   int col = 0;
   while (col < BOARD_SIZE) {
      putchar (board[col] + '1');
      col = col + 1;
   }
   putchar ('\n');
}

void queens (int newcol) {
   int row = 0;
   if (newcol == BOARD_SIZE) printqueens();
   else {
      while (row < BOARD_SIZE) {
         board[newcol] = row;
         if (is_safe (newcol)) queens (newcol + 1);
         row = row + 1;
      }
   }
}

int main() {
   board = new int[BOARD_SIZE];
   queens (0);
   return 0;
}

@


1.13
log
@-
@
text
@d1 1
a1 1
// $Id: 42-viiiqueens.oc,v 1.12 2018-04-17 16:55:18-07 - - $
d10 1
d13 1
a13 1
      int diagonal = board[col] - board[newcol];
@


1.12
log
@-
@
text
@d1 1
a1 1
// $Id: 42-viiiqueens.oc,v 1.11 2018-04-06 13:19:15-07 - - $
d30 1
a32 1
      int row = 0;
@


1.11
log
@-
@
text
@d1 1
a1 1
// $Id: 42-viiiqueens.oc,v 1.10 2018-04-03 14:55:47-07 - - $
d3 1
a3 1
#include "oclib.oh"
d6 1
a6 1
int[] board[BOARD_SIZE];
d42 1
d44 1
@


1.10
log
@-
@
text
@d1 1
a1 1
// $Id: 42-viiiqueens.oc,v 1.9 2018-03-30 10:21:02-07 - - $
d6 1
a6 1
int[] board = new int[BOARD_SIZE];
d23 1
a23 1
      putc (board[col] + '1');
d26 1
a26 1
   putc ('\n');
@


1.9
log
@-
@
text
@d1 1
a1 1
// $Id: 42-viiiqueens.oc,v 1.8 2018-03-30 10:19:09-07 - - $
d41 1
a41 1
void main() {
@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: 42-viiiqueens.oc,v 1.5 2016-10-26 14:34:06-07 - - $
d20 1
a20 1
void printqueens () {
d30 1
a30 1
   if (newcol == BOARD_SIZE) printqueens ();
@


1.7
log
@-
@
text
@d1 1
a1 1
//()$Id: 42-viiiqueens.oc,v 1.6 2018-03-29 17:44:54-07 - - $
d3 1
a3 1
#include()"oclib.oh"
d5 2
a6 2
#define()BOARD_SIZE 8
int[]()board = new int[BOARD_SIZE];
d8 10
a17 10
bool()is_safe (int newcol) {
()  int col = 0;
()  while (col < newcol) {
()     if (board[col] == board[newcol]) return false;
()     int diagonal = board[col] - board[newcol];
()     if (diagonal == col - newcol) return false;
()     if (diagonal == newcol - col) return false;
()     col = col + 1;
()  }
()  return true;
d20 7
a26 7
void()printqueens () {
()  int col = 0;
()  while (col < BOARD_SIZE) {
()     putc (board[col] + '1');
()     col = col + 1;
()  }
()  putc ('\n');
d29 10
a38 10
void()queens (int newcol) {
()  if (newcol == BOARD_SIZE) printqueens ();
()  else {
()     int row = 0;
()     while (row < BOARD_SIZE) {
()        board[newcol] = row;
()        if (is_safe (newcol)) queens (newcol + 1);
()        row = row + 1;
()     }
()  }
d41 2
a42 2
void()main() {
()  queens (0);
@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: 42-viiiqueens.oc,v 1.5 2016-10-26 14:34:06-07 - - $
d3 1
a3 1
#include "oclib.oh"
d5 2
a6 2
#define BOARD_SIZE 8
int[] board = new int[BOARD_SIZE];
d8 10
a17 10
bool is_safe (int newcol) {
   int col = 0;
   while (col < newcol) {
      if (board[col] == board[newcol]) return false;
      int diagonal = board[col] - board[newcol];
      if (diagonal == col - newcol) return false;
      if (diagonal == newcol - col) return false;
      col = col + 1;
   }
   return true;
d20 7
a26 7
void printqueens () {
   int col = 0;
   while (col < BOARD_SIZE) {
      putc (board[col] + '1');
      col = col + 1;
   }
   putc ('\n');
d29 10
a38 10
void queens (int newcol) {
   if (newcol == BOARD_SIZE) printqueens ();
   else {
      int row = 0;
      while (row < BOARD_SIZE) {
         board[newcol] = row;
         if (is_safe (newcol)) queens (newcol + 1);
         row = row + 1;
      }
   }
d41 2
a42 2
void main() {
   queens (0);
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: 42-viiiqueens.oc,v 1.4 2012-12-03 13:24:51-08 - - $
d41 3
a43 2
// Main program.
queens (0);
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: 42-viiiqueens.oc,v 1.3 2011-10-25 18:21:10-07 - - $
d23 1
a23 1
      putc (chr (board[col] + ord '1'));
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: 42-viiiqueens.oc,v 1.2 2011-09-20 19:23:27-07 - - $
d23 1
a23 1
      putchar (chr (board[col] + ord '1'));
d26 1
a26 1
   putchar ('\n');
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: 42-viiiqueens.oc,v 1.1 2011-09-15 18:50:16-07 - - $
d5 1
a5 1
#cefine BOARD_SIZE 8
d23 1
a23 1
      putchar (chr (board[col] + ord ('1')));
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: 42-viiiqueens.oc,v 1.2 2011-09-15 18:46:11-07 - - $
d22 1
a22 1
   while (col < board.size) {
@
