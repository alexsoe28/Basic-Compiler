head	1.10;
access;
symbols;
locks;
comment	@# @;


1.10
date	2018.04.17.23.55.18;	author -;	state -;
branches;
next	1.9;

1.9
date	2018.04.06.20.18.35;	author -;	state -;
branches;
next	1.8;

1.8
date	2018.04.03.22.51.25;	author -;	state -;
branches;
next	1.7;

1.7
date	2018.04.03.21.55.47;	author -;	state -;
branches;
next	1.6;

1.6
date	2018.03.30.17.21.02;	author -;	state -;
branches;
next	1.5;

1.5
date	2018.03.30.17.19.09;	author -;	state -;
branches;
next	1.4;

1.4
date	2018.03.30.00.46.39;	author -;	state -;
branches;
next	1.3;

1.3
date	2018.03.30.00.44.54;	author -;	state -;
branches;
next	1.2;

1.2
date	2016.10.07.00.03.00;	author -;	state -;
branches;
next	1.1;

1.1
date	2011.10.21.04.31.44;	author -;	state -;
branches;
next	;


desc
@@


1.10
log
@-
@
text
@// $Id: 31-fib-2supn.oc,v 1.9 2018-04-06 13:18:35-07 - - $
//
// Very slow program, computes Fibonacci numbers with O(2^n) speed.
//

#include "oclib.h"

int fibonacci (int n) {
   if (n < 2) return n;
   return fibonacci (n - 1) + fibonacci (n - 2);
}

int main() {
   int n = 0;
   while (n < 10) {
      putstr ("fibonacci(");
      putint (n);
      putstr (") = ");
      putint (fibonacci (n));
      putchar ('\n');
      n = n + 1;
   }
   return EXIT_SUCCESS;
}

@


1.9
log
@-
@
text
@d1 1
a1 1
// $Id: 31-fib-2supn.oc,v 1.8 2018-04-03 15:51:25-07 - - $
d6 1
a6 1
#include "oclib.oh"
d23 1
@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: 31-fib-2supn.oc,v 1.7 2018-04-03 14:55:47-07 - - $
d16 5
a20 5
      puts ("fibonacci(");
      puti (n);
      puts (") = ");
      puti (fibonacci (n));
      putc ('\n');
@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: 31-fib-2supn.oc,v 1.6 2018-03-30 10:21:02-07 - - $
d20 1
a20 1
      endl();
@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: 31-fib-2supn.oc,v 1.5 2018-03-30 10:19:09-07 - - $
d13 1
a13 1
void main() {
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: 31-fib-2supn.oc,v 1.2 2016-10-06 17:03:00-07 - - $
d20 1
a20 1
      endl ();
@


1.4
log
@-
@
text
@d1 1
a1 1
//()$Id: 31-fib-2supn.oc,v 1.3 2018-03-29 17:44:54-07 - - $
d3 1
a3 1
//()Very slow program, computes Fibonacci numbers with O(2^n) speed.
d6 1
a6 1
#include()"oclib.oh"
d8 3
a10 3
int()fibonacci (int n) {
()  if (n < 2) return n;
()  return fibonacci (n - 1) + fibonacci (n - 2);
d13 10
a22 10
void()main() {
()  int n = 0;
()  while (n < 8) {
()     puts ("fibonacci(");
()     puti (n);
()     puts (") = ");
()     puti (fibonacci (n));
()     endl()();
()     n = n + 1;
()  }
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: 31-fib-2supn.oc,v 1.2 2016-10-06 17:03:00-07 - - $
d3 1
a3 1
// Very slow program, computes Fibonacci numbers with O(2^n) speed.
d6 1
a6 1
#include "oclib.oh"
d8 3
a10 3
int fibonacci (int n) {
   if (n < 2) return n;
   return fibonacci (n - 1) + fibonacci (n - 2);
d13 10
a22 10
void main() {
   int n = 0;
   while (n < 8) {
      puts ("fibonacci(");
      puti (n);
      puts (") = ");
      puti (fibonacci (n));
      endl ();
      n = n + 1;
   }
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: 31-fib-2supn.oc,v 1.1 2011-10-20 21:31:44-07 - - $
d13 10
a22 10
// Main program.

int n = 0;
while (n < 10) {
   puts ("fibonacci(");
   puti (n);
   puts (") = ");
   puti (fibonacci (n));
   endl ();
   n = n + 1;
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: 30-fib-2supn.oc,v 1.1 2011-09-15 18:50:16-07 - - $
d19 1
a19 1
   puts (" = ");
d22 1
@
