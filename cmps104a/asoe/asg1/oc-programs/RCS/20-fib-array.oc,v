head	1.12;
access;
symbols;
locks;
comment	@# @;


1.12
date	2018.11.26.23.38.20;	author -;	state -;
branches;
next	1.11;

1.11
date	2018.05.16.22.34.46;	author -;	state -;
branches;
next	1.10;

1.10
date	2018.04.17.23.55.18;	author -;	state -;
branches;
next	1.9;

1.9
date	2018.04.06.20.16.58;	author -;	state -;
branches;
next	1.8;

1.8
date	2018.04.03.22.51.25;	author -;	state -;
branches;
next	1.7;

1.7
date	2018.04.03.21.55.47;	author -;	state -;
branches;
next	1.6;

1.6
date	2018.03.30.17.19.09;	author -;	state -;
branches;
next	1.5;

1.5
date	2018.03.30.00.46.39;	author -;	state -;
branches;
next	1.4;

1.4
date	2016.06.02.23.00.22;	author -;	state -;
branches;
next	1.3;

1.3
date	2012.12.03.21.22.58;	author -;	state -;
branches;
next	1.2;

1.2
date	2011.09.21.02.23.27;	author -;	state -;
branches;
next	1.1;

1.1
date	2011.09.16.01.50.16;	author -;	state -;
branches;
next	;


desc
@@


1.12
log
@-
@
text
@// $Id: 20-fib-array.oc,v 1.11 2018-05-16 15:34:46-07 - - $
//
// Put Fibonacci numbers in an array, then print them.
//

#include "oclib.h"

#define FIB_SIZE 30
int[] fibonacci = null;

int main() {
   int index = 2;
   fibonacci = new int[FIB_SIZE];
   fibonacci[0] = 0;
   fibonacci[1] = 1;

   while (index < FIB_SIZE) {
      fibonacci[index] = fibonacci[index - 1] + fibonacci[index - 2];
      index = index + 1;
   }

   index = 0;
   putstr ("Numeri di figlio Bonacci\n");
   while (index < FIB_SIZE) {
      putstr ("fibonacci[");
      putint (index);
      putstr ("] = ");
      putint (fibonacci[index]);
      putchar ('\n');
      index = index + 1;
   }
}

@


1.11
log
@-
@
text
@d1 1
a1 1
// $Id: 20-fib-array.oc,v 1.10 2018-04-17 16:55:18-07 - - $
d23 1
a23 1
   puts ("Numeri di figlio Bonacci\n");
@


1.10
log
@-
@
text
@d1 1
a1 1
// $Id: 20-fib-array.oc,v 1.9 2018-04-06 13:16:58-07 - - $
d12 1
a16 1
   int index = 2;
@


1.9
log
@-
@
text
@d1 1
a1 1
// $Id: 20-fib-array.oc,v 1.8 2018-04-03 15:51:25-07 - - $
d6 1
a6 1
#include "oclib.oh"
d9 1
a9 1
int[] fibonacci[FIB_SIZE];
d12 1
@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: 20-fib-array.oc,v 1.7 2018-04-03 14:55:47-07 - - $
d9 1
a11 1
   int[] fibonacci = new int[FIB_SIZE];
d24 5
a28 5
      puts ("fibonacci[");
      puti (index);
      puts ("] = ");
      puti (fibonacci[index]);
      putc ('\n');
@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: 20-fib-array.oc,v 1.6 2018-03-30 10:19:09-07 - - $
d28 1
a28 1
      endl();
@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: 20-fib-array.oc,v 1.4 2016-06-02 16:00:22-07 - - $
d10 1
a10 1
void main() {
@


1.5
log
@-
@
text
@d1 1
a1 1
//()$Id: 20-fib-array.oc,v 1.4 2016-06-02 16:00:22-07 - - $
d3 1
a3 1
//()Put Fibonacci numbers in an array, then print them.
d6 1
a6 1
#include()"oclib.oh"
d8 1
a8 2
#define()FIB_SIZE 30
int[]()fibonacci = new int[FIB_SIZE];
d10 4
a13 2
fibonacci[0]()= 0;
fibonacci[1]()= 1;
d15 16
a30 4
int()index = 2;
while()(index < FIB_SIZE) {
()  fibonacci[index] = fibonacci[index - 1] + fibonacci[index - 2];
()  index = index + 1;
a32 10
index()= 0;
puts()("Numeri di figlio Bonacci\n");
while()(index < FIB_SIZE) {
()  puts ("fibonacci[");
()  puti (index);
()  puts ("] = ");
()  puti (fibonacci[index]);
()  endl()();
()  index = index + 1;
}
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: 20-fib-array.oc,v 1.3 2012-12-03 13:22:58-08 - - $
d3 1
a3 1
// Put Fibonacci numbers in an array, then print them.
d6 1
a6 1
#include "oclib.oh"
d8 2
a9 2
#define FIB_SIZE 30
int[] fibonacci = new int[FIB_SIZE];
d11 2
a12 2
fibonacci[0] = 0;
fibonacci[1] = 1;
d14 4
a17 4
int index = 2;
while (index < FIB_SIZE) {
   fibonacci[index] = fibonacci[index - 1] + fibonacci[index - 2];
   index = index + 1;
d20 9
a28 9
index = 0;
puts ("Numeri di figlio Bonacci\n");
while (index < FIB_SIZE) {
   puts ("fibonacci[");
   puti (index);
   puts ("] = ");
   puti (fibonacci[index]);
   endl ();
   index = index + 1;
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: 20-fib-array.oc,v 1.2 2011-09-20 19:23:27-07 - - $
d25 1
a25 1
   puts (" = ");
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: 20-fib-array.oc,v 1.1 2011-09-15 18:50:16-07 - - $
d6 2
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: 20-fib-array.oc,v 1.1 2011-09-15 15:30:10-07 - - $
d6 2
a7 1
int[] fibonacci = new int[30];
d13 1
a13 1
while (index < fibonacci.size) {
d20 1
a20 1
while (index < fibonacci.size) {
@
