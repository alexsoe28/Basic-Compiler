head	1.11;
access;
symbols;
locks;
comment	@# @;


1.11
date	2018.04.17.23.55.18;	author -;	state -;
branches;
next	1.10;

1.10
date	2018.04.06.20.18.19;	author -;	state -;
branches;
next	1.9;

1.9
date	2018.04.03.22.51.25;	author -;	state -;
branches;
next	1.8;

1.8
date	2018.04.03.21.55.47;	author -;	state -;
branches;
next	1.7;

1.7
date	2018.03.30.17.19.09;	author -;	state -;
branches;
next	1.6;

1.6
date	2018.03.30.00.46.39;	author -;	state -;
branches;
next	1.5;

1.5
date	2018.03.30.00.44.54;	author -;	state -;
branches;
next	1.4;

1.4
date	2011.11.17.04.18.50;	author -;	state -;
branches;
next	1.3;

1.3
date	2011.11.17.04.15.30;	author -;	state -;
branches;
next	1.2;

1.2
date	2011.10.21.04.41.55;	author -;	state -;
branches;
next	1.1;

1.1
date	2011.10.21.04.34.08;	author -;	state -;
branches;
next	;


desc
@@


1.11
log
@-
@
text
@// $Id: 30-fac-fnloop.oc,v 1.10 2018-04-06 13:18:19-07 - - $
//
// Function uses a loop to compute factorial.
//

#include "oclib.h"

int fac (int n) {
   int f = 1;
   while (n > 1) {
      f = f * n;
      n = n - 1;
   }
   return f;
}

int main() {
   int n = 1;
   while (n <= 5) {
      putint (fac (n));
      putchar ('\n');
      n = n + 1;
   }
   return 0;
}

@


1.10
log
@-
@
text
@d1 1
a1 1
// $Id: 30-fac-fnloop.oc,v 1.9 2018-04-03 15:51:25-07 - - $
d6 1
a6 1
#include "oclib.oh"
d24 1
@


1.9
log
@-
@
text
@d1 1
a1 1
// $Id: 30-fac-fnloop.oc,v 1.8 2018-04-03 14:55:47-07 - - $
d20 2
a21 2
      puti (fac (n));
      putc ('\n');
@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: 30-fac-fnloop.oc,v 1.7 2018-03-30 10:19:09-07 - - $
d21 1
a21 1
      endl();
@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: 30-fac-fnloop.oc,v 1.4 2011-11-16 20:18:50-08 - - $
d17 1
a17 1
void main() {
@


1.6
log
@-
@
text
@d1 1
a1 1
//()$Id: 30-fac-fnloop.oc,v 1.5 2018-03-29 17:44:54-07 - - $
d3 1
a3 1
//()Function uses a loop to compute factorial.
d6 1
a6 1
#include()"oclib.oh"
d8 7
a14 7
int()fac (int n) {
()  int f = 1;
()  while (n > 1) {
()     f = f * n;
()     n = n - 1;
()  }
()  return f;
d17 7
a23 7
void()main() {
()  int n = 1;
()  while (n <= 5) {
()     puti (fac (n));
()     endl()();
()     n = n + 1;
()  }
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: 30-fac-fnloop.oc,v 1.4 2011-11-16 20:18:50-08 - - $
d3 1
a3 1
// Function uses a loop to compute factorial.
d6 1
a6 1
#include "oclib.oh"
d8 7
a14 7
int fac (int n) {
   int f = 1;
   while (n > 1) {
      f = f * n;
      n = n - 1;
   }
   return f;
d17 7
a23 7
void main() {
   int n = 1;
   while (n <= 5) {
      puti (fac (n));
      endl ();
      n = n + 1;
   }
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: 30-fac-fnloop.oc,v 1.3 2011-11-16 20:15:30-08 - - $
d17 7
a23 5
int n = 1;
while (n <= 5) {
   puti (fac (n));
   endl ();
   n = n + 1;
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: 30-fac-fnloop.oc,v 1.2 2011-10-20 21:41:55-07 - - $
d20 1
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: 30-fac-fnloop.oc,v 1.1 2011-10-20 21:34:08-07 - - $
d20 1
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id$
d6 2
@
