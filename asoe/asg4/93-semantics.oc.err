--(end of buffer or a NUL)
--accepting rule at line 31 ("# 1 "93-semantics.oc"")
--included # 1 "93-semantics.oc"
--accepting rule at line 33 ("
")
--accepting rule at line 31 ("# 1 "<built-in>"")
--included # 1 "<built-in>"
--accepting rule at line 33 ("
")
--accepting rule at line 31 ("# 1 "<command-line>"")
--included # 1 "<command-line>"
--accepting rule at line 33 ("
")
--accepting rule at line 31 ("# 1 "93-semantics.oc"")
--included # 1 "93-semantics.oc"
--accepting rule at line 33 ("
")
--accepting rule at line 33 ("
")
--accepting rule at line 33 ("
")
--accepting rule at line 33 ("
")
--accepting rule at line 42 ("int")
--accepting rule at line 51 ("[]")
ËQm:4.4: syntax error, unexpected TOK_ARRAY, expecting IDENT
--accepting rule at line 32 (" ")
--accepting rule at line 53 ("a")
--accepting rule at line 32 (" ")
--accepting rule at line 59 ("=")
--accepting rule at line 32 (" ")
--accepting rule at line 53 ("null")
--accepting rule at line 70 (";")
--accepting rule at line 33 ("
")
--accepting rule at line 42 ("int")
--accepting rule at line 51 ("[]")
--accepting rule at line 32 (" ")
--accepting rule at line 53 ("b")
--accepting rule at line 32 (" ")
--accepting rule at line 59 ("=")
--accepting rule at line 32 (" ")
--accepting rule at line 53 ("null")
--accepting rule at line 70 (";")
--accepting rule at line 33 ("
")
--accepting rule at line 33 ("
")
--accepting rule at line 47 ("void")
--accepting rule at line 51 ("[]")
--accepting rule at line 32 (" ")
--accepting rule at line 53 ("f")
--accepting rule at line 65 ("(")
--accepting rule at line 66 (")")
--accepting rule at line 32 (" ")
--accepting rule at line 71 ("{")
--accepting rule at line 72 ("}")
--accepting rule at line 70 (";")
--accepting rule at line 33 ("
")
--accepting rule at line 33 ("
")
--accepting rule at line 42 ("int")
--accepting rule at line 32 (" ")
--accepting rule at line 53 ("main")
--accepting rule at line 65 ("(")
--accepting rule at line 66 (")")
--accepting rule at line 32 (" ")
--accepting rule at line 71 ("{")
--accepting rule at line 33 ("
")
--accepting rule at line 32 ("   ")
--accepting rule at line 42 ("int")
--accepting rule at line 32 (" ")
--accepting rule at line 53 ("c")
--accepting rule at line 32 (" ")
--accepting rule at line 59 ("=")
--accepting rule at line 32 (" ")
--accepting rule at line 53 ("a")
--accepting rule at line 32 (" ")
--accepting rule at line 60 ("+")
--accepting rule at line 32 (" ")
--accepting rule at line 53 ("b")
--accepting rule at line 70 (";")
--accepting rule at line 33 ("
")
--accepting rule at line 32 ("   ")
--accepting rule at line 47 ("void")
--accepting rule at line 32 (" ")
--accepting rule at line 53 ("n")
--accepting rule at line 32 (" ")
--accepting rule at line 59 ("=")
--accepting rule at line 32 (" ")
--accepting rule at line 53 ("null")
--accepting rule at line 70 (";")
--accepting rule at line 33 ("
")
--accepting rule at line 32 ("   ")
--accepting rule at line 42 ("int")
--accepting rule at line 32 (" ")
--accepting rule at line 53 ("x")
--accepting rule at line 32 (" ")
--accepting rule at line 59 ("=")
--accepting rule at line 32 (" ")
--accepting rule at line 53 ("a")
--accepting rule at line 32 (" ")
--accepting rule at line 68 ("<")
--accepting rule at line 32 (" ")
--accepting rule at line 53 ("b")
--accepting rule at line 70 (";")
--accepting rule at line 33 ("
")
--accepting rule at line 32 ("   ")
--accepting rule at line 42 ("int")
--accepting rule at line 32 (" ")
--accepting rule at line 53 ("y")
--accepting rule at line 32 (" ")
--accepting rule at line 59 ("=")
--accepting rule at line 32 (" ")
--accepting rule at line 53 ("a")
--accepting rule at line 56 ("==")
--accepting rule at line 53 ("b")
--accepting rule at line 70 (";")
--accepting rule at line 33 ("
")
--accepting rule at line 32 ("   ")
--accepting rule at line 38 ("return")
--accepting rule at line 32 (" ")
--accepting rule at line 49 (""foobar"")
--accepting rule at line 70 (";")
--accepting rule at line 33 ("
")
--accepting rule at line 72 ("}")
--accepting rule at line 33 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
