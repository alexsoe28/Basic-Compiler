--(end of buffer or a NUL)
--accepting rule at line 31 ("# 1 "test.oc"")
--included # 1 "test.oc"
--accepting rule at line 33 ("
")
--accepting rule at line 31 ("# 1 "<built-in>"")
--included # 1 "<built-in>"
--accepting rule at line 33 ("
")
--accepting rule at line 31 ("# 1 "<command-line>"")
--included # 1 "<command-line>"
--accepting rule at line 33 ("
")
--accepting rule at line 31 ("# 1 "test.oc"")
--included # 1 "test.oc"
--accepting rule at line 33 ("
")
--accepting rule at line 37 ("while")
--accepting rule at line 32 (" ")
--accepting rule at line 65 ("(")
--accepting rule at line 53 ("argi")
--accepting rule at line 32 (" ")
--accepting rule at line 68 ("<")
--accepting rule at line 32 (" ")
--accepting rule at line 53 ("argc")
--accepting rule at line 66 (")")
--accepting rule at line 32 (" ")
--accepting rule at line 71 ("{")
--accepting rule at line 33 ("
")
--accepting rule at line 32 ("      ")
--accepting rule at line 53 ("push")
--accepting rule at line 32 (" ")
--accepting rule at line 65 ("(")
--accepting rule at line 53 ("stack")
--accepting rule at line 78 (",")
èM:2.18: invalid source character (,)
--accepting rule at line 32 (" ")
--accepting rule at line 53 ("argv")
èM:2.20: syntax error, unexpected IDENT, expecting ')' or ','
--accepting rule at line 73 ("[")
--accepting rule at line 53 ("argi")
--accepting rule at line 74 ("]")
--accepting rule at line 66 (")")
--accepting rule at line 70 (";")
--accepting rule at line 33 ("
")
--accepting rule at line 32 ("      ")
--accepting rule at line 53 ("argi")
--accepting rule at line 32 (" ")
--accepting rule at line 59 ("=")
--accepting rule at line 32 (" ")
--accepting rule at line 53 ("argi")
--accepting rule at line 32 (" ")
--accepting rule at line 60 ("+")
--accepting rule at line 32 (" ")
--accepting rule at line 52 ("1")
èM:3.21: syntax error, unexpected TOK_INT
--accepting rule at line 70 (";")
--accepting rule at line 33 ("
")
--accepting rule at line 32 ("   ")
--accepting rule at line 72 ("}")
--accepting rule at line 33 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
